## Kafka server start for ubuntu ## 

    1. sudo -i

    2. cd kafka_2.11-1.1.0

    3. bin/zookeeper-server-start.sh config/zookeeper.properties &
        
    4. bin/kafka-server-start.sh config/server.properties &

    ## Kafka listout current topics 

    5. bin/kafka-topics.sh --list --zookeeper localhost:2181

    ## Delete kafka Topic name

    6. bin/kafka-topics.sh --zookeeper localhost:2181 --delete --topic "topic_name"


## Ubuntu Network configuration 

    1. sudo /sbin/route delete default

    2. sudo /sbin/route add default gw 10.6.0.11


## Code push GIT Cmds

    1. git status 

    2. git branch (verification)

    3. git checkout -b "branch_name" (create new branch)

    4. git add "files" (modifyed 0r created new files name)

    5. git commit -m"reviewer comments"

    6. git push origin "branch_name"

    7. git pull origin "branch_name" (once reviewer approved this state)


## Insert HTml content in mongodb  collection ref :

    1. https://groups.google.com/forum/#!topic/mongodb-user/vw00sM1v5o4

## exceution Python pyc file's remove comment

    1. find . -name "*.pyc" -exec rm -f {} \;

## ubuntu grep comments :

    1. ps -aef | grep python


## Running Process kill comment :

    1. pkill -9 python

## UiPath desktop application automation Example:

    1. https://www.youtube.com/watch?v=lgiChrgzzoU

## Git Delete Last commit 

    1. git reset HEAD^

## Delete Previous Commits

    1. git reset --hard HEAD~(prev id) Ex : git reset --hard HEAD~2

## Katalon Extract-data from xlxs sheet and Fill autoamtically 

    1. https://www.youtube.com/watch?v=naBpqjs4zho


##Document Render

    1. mvn test -Dtest=docgenunittests#convertTemplate -DinTemplateName="C://template//Terafast2.docx" -DoutTemplateName="C://template//Terafast3.docx"


##For generate document

    1. mvn test -Dtest=GenerateDocTest#generateDoc -DjsonFile="C://template//jsonInputfile.json" -Dtemplate="C://template//Terafast3.docx" -DoutputDocName="C://template//outPutDocument.docx"



## get-git config Username & mailId :

    1. git config --list 


##ODOO Start

    1. sudo service odoo start

##ODOO POSTGRESQL START

    1. sudo /etc/init.d/postgresql restart

##POSTGRESQL EPOSE DOCKER

    1. export DATABASE_USER=postgres \
    2. export DATABASE_PASSWORD=secret \
    3. export DATABASE_HOST=localhost \
    4. export DATABASE_PORT=5432 \
    5. export DATABASE_DB=demo

    6. docker run --name POSTGRES_USER -p "$DATABASE_PORT":"$DATABASE_PORT"  \
    7. -e POSTGRES_PASSWORD="$DATABASE_PASSWORD"  \
    8. -e POSTGRES_USER="$DATABASE_USER"  \
    9. -e POSTGRES_DB="$DATABASE_DB" \
    10. -d postgres:9.1



